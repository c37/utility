{"version":3,"file":"main.min.js","sources":["../src/back-end/management/authentication.js","../src/back-end/management/authorization/jwt-strategy.js","../src/back-end/management/index.js","../src/back-end/management/authorization/cuc-strategy.js","../src/back-end/management/authorization.js","../src/back-end/persistence/databases/dynamo.js","../src/back-end/persistence/databases/index.js","../src/back-end/persistence/repositories/index.js","../src/back-end/persistence/repositories/abstract.js","../src/back-end/index.js","../src/back-end/persistence/index.js","../src/back-end/persistence/unity-of-work.js","../src/front-end/index.js","../src/front-end/hooks/index.js","../src/front-end/hooks/use-update.js","../src/utility/index.js","../src/utility/math.js","../src/utility/string.js","../src/utility/function.js","../src/utility/network.js"],"sourcesContent":["const validate = (resolver) => {\n  const baseResolver = resolver;\n\n  baseResolver.validate = (childResolver) => {\n    const newResolver = async (parent, args, context, info) => {\n      await resolver(parent, args, context, info);\n\n      return childResolver(parent, args, context, info);\n    };\n\n    return validate(newResolver);\n  };\n\n  return baseResolver;\n};\n\nexport default validate((_, __, { auth }) => {\n  if (!auth || !auth.authenticated) {\n    const {\n      message = \"Not Authenticated\",\n      code = \"NOT_AUTHENTICATED\",\n      status = 401,\n    } = auth || {};\n\n    const error = new Error(message);\n\n    error.code = code;\n    error.status = status;\n\n    throw error;\n  }\n});\n","const jwt = require(\"jsonwebtoken\");\n\nconst { SECRET } = process.env;\n\nexport default (token) => {\n  if (!token) {\n    const error = new Error(\"The api token is missing\");\n\n    error.code = \"MISSING_TOKEN\";\n    error.status = 401;\n\n    throw error;\n  }\n\n  let verify = null;\n  let authenticated = false;\n\n  const parts = token.split(\" \");\n\n  if (!parts.length === 2) {\n    const error = new Error(\"The api token is invalid\");\n\n    error.code = \"INVALID_TOKEN\";\n    error.status = 401;\n\n    throw error;\n  }\n\n  const [type, data] = parts;\n\n  if (type !== \"Bearer\") {\n    const error = new Error(\"The api token is malformatted\");\n\n    error.code = \"MALFORMATTED_TOKEN\";\n    error.status = 401;\n\n    throw error;\n  }\n\n  try {\n    verify = jwt.verify(data, SECRET);\n    authenticated = !!verify;\n  } catch (err) {}\n\n  return {\n    ...verify,\n    authenticated,\n  };\n};\n","import authentication from \"./authentication\";\nimport Authorization from \"./authorization\";\n\nimport cucAuthorizationStrategy from \"./authorization/cuc-strategy\";\nimport jwtAuthorizationStrategy from \"./authorization/jwt-strategy\";\n\nexport default {\n  cucAuthorizationStrategy,\n  jwtAuthorizationStrategy,\n  authentication,\n  Authorization,\n};\n","export default (data) => {\n  if (!data) {\n    const error = new Error(\"The cuc is missing\");\n\n    error.code = \"MISSING_CUC\";\n    error.status = 401;\n\n    throw error;\n  }\n\n  return {\n    user: data,\n    authenticated: true,\n  };\n};\n","export default class Authorization {\n  constructor(authorizationStrategy) {\n    this.authorization = authorizationStrategy;\n  }\n\n  verify(data) {\n    return this.authorization(data);\n  }\n}\n","import { config, DynamoDB } from \"aws-sdk\";\n\nconst IS_OFFLINE = process.env.IS_OFFLINE;\n\nexport default class Dynamo {\n  constructor(\n    settings = {\n      convertEmptyValues: true,\n    }\n  ) {\n    // connect to local DB if running offline\n    if (IS_OFFLINE) {\n      settings.region = \"localhost\";\n      settings.endpoint = \"http://localhost:4040\";\n      settings.accessKeyId = \"DEFAULT_ACCESS_KEY\";\n      settings.secretAccessKey = \"DEFAULT_SECRET\";\n    }\n    config.update(settings);\n    try {\n      const dynamo = new DynamoDB();\n\n      const client = new DynamoDB.DocumentClient();\n\n      Object.assign(this, { client, dynamo });\n    } catch (error) {\n      console.error(error);\n\n      throw error;\n    }\n  }\n\n  static parseOperator(operator) {\n    switch (operator) {\n      case \"startswith\":\n        return \"BEGINS_WITH\";\n      case \"contains\":\n        return \"CONTAINS\";\n      case \"in\":\n        return \"IN\";\n      case \"between\":\n        return \"BETWEEN\";\n      case \"neq\":\n        return \"NE\";\n      case \"gt\":\n        return \"GT\";\n      case \"gte\":\n        return \"GE\";\n      case \"lt\":\n        return \"LT\";\n      case \"lte\":\n        return \"LE\";\n      case \"isnotnull\":\n        return \"NOT_NULL\";\n      case \"isnull\":\n        return \"NULL\";\n      default:\n        return \"EQ\";\n    }\n  }\n\n  static parseValue(filter) {\n    try {\n      if (\n        typeof filter.value === \"string\" &&\n        filter.value.includes(\",\") &&\n        filter.operator === \"in\"\n      ) {\n        return filter.value\n          .split(\",\")\n          .map((value) => (filter.type === \"N\" ? parseFloat(value) : value));\n      }\n    } catch (error) {\n      console.error(error, filter);\n      throw error;\n    }\n\n    switch (filter.type) {\n      case \"N\":\n        return [parseFloat(filter.value)];\n      case \"B\":\n        return [!!parseFloat(filter.value)];\n      default:\n        return [filter.value];\n    }\n  }\n\n  static parseFilter(filter) {\n    return filter\n      .filter(({ value }) => !!value)\n      .reduce(\n        (accum, curr) => ({\n          ...accum,\n          [curr.field]: {\n            ComparisonOperator: this.parseOperator(curr.operator),\n            AttributeValueList: this.parseValue(curr),\n          },\n        }),\n        {}\n      );\n  }\n\n  async createTable(tableName, options = {}) {\n    const params = {\n      TableName: tableName,\n      KeySchema: [{ AttributeName: \"id\", KeyType: \"HASH\" }],\n      AttributeDefinitions: [{ AttributeName: \"id\", AttributeType: \"N\" }],\n      ProvisionedThroughput: {\n        ReadCapacityUnits: 5,\n        WriteCapacityUnits: 5,\n      },\n    };\n\n    if (options.indexes) {\n      params.globalIndexes = options.indexes\n        .filter({ type: \"global\" })\n        .keyBy(\"name\")\n        .value();\n      params.secondaryIndexes = options.indexes\n        .filter({ type: \"local\" })\n        .keyBy(\"name\")\n        .value();\n    }\n    try {\n      return this.dynamo.createTable(params).promise();\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  async deleteTable(tableName) {\n    try {\n      return this.dynamo.deleteTable({ TableName: tableName }).promise();\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  withTable(tableName) {\n    this.tableName = tableName;\n\n    return this;\n  }\n\n  async put(data) {\n    try {\n      return await this.client\n        .put({\n          TableName: this.tableName,\n          Item: data,\n        })\n        .promise();\n    } catch (error) {\n      console.error(error, data);\n      throw error;\n    }\n  }\n\n  // async updateByKey(key, data) {\n  //   const dataClean = omitBy(\n  //     data,\n  //     (item, keyName) => Object.keys(key).includes(keyName) || isNil(item)\n  //   );\n  //   const dataAttrs = Object.keys(dataClean);\n  //   const expressionAttributeNames = dataAttrs.reduce(\n  //     (acc, keyName) => ({\n  //       ...acc,\n  //       [`#${keyName}`]: keyName,\n  //     }),\n  //     {}\n  //   );\n\n  //   const updateExpression = `set ${dataAttrs\n  //     .map((keyName) => `#${keyName} = :${keyName}`)\n  //     .join(\", \")}`;\n\n  //   const expressionAttributeValues = dataAttrs.reduce(\n  //     (acc, keyName) => ({\n  //       ...acc,\n  //       [`:${keyName}`]: dataClean[keyName],\n  //     }),\n  //     {}\n  //   );\n\n  //   return this.update(key, {\n  //     updateExpression,\n  //     expressionAttributeNames,\n  //     expressionAttributeValues,\n  //   });\n  // }\n\n  async update(\n    key,\n    {\n      updateExpression,\n      expressionAttributeNames,\n      expressionAttributeValues,\n      returnValues = \"UPDATED_NEW\",\n    }\n  ) {\n    const params = {\n      TableName: this.tableName,\n      Key: key,\n      UpdateExpression: updateExpression,\n      ExpressionAttributeNames: expressionAttributeNames,\n      ExpressionAttributeValues: expressionAttributeValues,\n      ReturnValues: returnValues,\n    };\n\n    try {\n      const result = await this.client.update(params).promise();\n\n      return result.Attributes;\n    } catch (error) {\n      console.error(error);\n\n      throw error;\n    }\n  }\n\n  async delete(key, condition) {\n    const params = {\n      TableName: this.tableName,\n      Key: key,\n    };\n\n    if (condition) {\n      (params.ConditionExpression = condition.expression),\n        (params.ExpressionAttributeValues = condition.values);\n    }\n\n    await this.client.delete(params).promise();\n\n    return true;\n  }\n\n  async findByKey(key) {\n    const params = {\n      TableName: this.tableName,\n      Key: key,\n    };\n\n    const result = await this.client.get(params).promise();\n\n    return result.Item;\n  }\n\n  async get(key) {\n    const params = {\n      TableName: this.tableName,\n      Key: key,\n    };\n\n    const result = await this.client.get(params).promise();\n\n    return result.Item;\n  }\n\n  async findAll() {\n    const response = await this.client\n      .scan({\n        TableName: this.tableName,\n      })\n      .promise();\n\n    return response.Items;\n  }\n\n  async filter({\n    indexName = null,\n    filter = null,\n    limit = null,\n    skip = null,\n    sort = null,\n    attributesToGetString = null,\n    lean = false,\n  }) {\n    const {\n      KeyConditionExpression,\n      ExpressionAttributeNames,\n      ExpressionAttributeValues,\n      FilterExpression,\n    } = parseFilterToExpressions(filter);\n\n    const params = removeEmptyStringAndNullElements({\n      TableName: this.tableName,\n      IndexName: indexName,\n      KeyConditionExpression,\n      ExpressionAttributeNames,\n      ExpressionAttributeValues,\n      FilterExpression,\n      ProjectionExpression: attributesToGetString,\n    });\n\n    const { Count: count } = await this.client\n      .query({\n        ...params,\n        Select: \"COUNT\",\n      })\n      .promise();\n\n    if (sort) {\n      params.ScanIndexForward = sort.dir !== \"desc\";\n    }\n\n    if (limit) {\n      params.Limit = limit;\n    }\n\n    if (skip) {\n      params.ExclusiveStartKey = skip;\n    }\n\n    let response = await this.client.query(params).promise();\n    let items = [...response.Items];\n\n    process.env.STAGE === \"test\" && console.log(\"params\", params);\n    process.env.STAGE === \"test\" && console.log(\"response\", response);\n\n    if (response.LastEvaluatedKey) {\n      while (response.LastEvaluatedKey) {\n        params.ExclusiveStartKey = response.LastEvaluatedKey;\n        response = await this.client.query(params).promise();\n\n        process.env.STAGE === \"test\" && console.log(\"w - params\", params);\n        process.env.STAGE === \"test\" && console.log(\"w - response\", response);\n\n        if (limit && items.length + response.Items.length > limit) {\n          const itensToCopy = limit - items.length;\n\n          items = items.concat(response.Items.slice(0, itensToCopy));\n\n          response.LastEvaluatedKey = null;\n        } else {\n          items = items.concat(response.Items);\n        }\n      }\n    }\n\n    return {\n      count,\n      items,\n    };\n  }\n}\n\nconst removeEmptyStringAndNullElements = (obj) => {\n  for (const prop in obj) {\n    if (typeof obj[prop] === \"object\" && obj[prop] !== null) {\n      // dive deeper in\n      if (!Object.keys(obj[prop]).length) {\n        delete obj[prop];\n      } else {\n        removeEmptyStringAndNullElements(obj[prop]);\n      }\n    } else if (\n      obj[prop] === \"\" ||\n      obj[prop] === null ||\n      obj[prop] === undefined\n    ) {\n      // delete elements that are empty strings\n      delete obj[prop];\n    }\n  }\n  return obj;\n};\n\nconst parseConditionalExpression = ({ type, operator, field, value }) => {\n  if (\"A\".includes(type)) {\n    let result = \"(\";\n\n    value.forEach((item, idx) => {\n      result += `contains(#${field}, :${field}${idx})`;\n\n      result += idx !== value.length - 1 ? \" or \" : \"\";\n    });\n\n    return result + \")\";\n  }\n\n  switch (operator) {\n    case \"startswith\":\n      return `begins_with(#${field}, :${field})`;\n    case \"contains\":\n      return `contains(#${field}, :${field})`;\n    case \"in\":\n      return `#${field} IN (${value\n        .split(\",\")\n        .map((_, index) => `:${field}${index}`)\n        .join(\",\")})`;\n    case \"between\":\n      return `#${field} BETWEEN ${value\n        .split(\",\")\n        .map((_, index) => `:${field}${index}`)\n        .join(\" AND \")}`;\n    case \"neq\":\n      return `#${field} <> :${field}`;\n    case \"gt\":\n      return `#${field} > :${field}`;\n    case \"gte\":\n      return `#${field} >= :${field}`;\n    case \"lt\":\n      return `#${field} < :${field}`;\n    case \"lte\":\n      return `#${field} <= :${field}`;\n    case \"isnotnull\":\n      return `NOT attribute_type(#${field}, :${field})`;\n    case \"isnull\":\n      return `attribute_type(#${field}, :${field})`;\n    default:\n      return `#${field} = :${field}`;\n  }\n};\n\nconst genMapFieldsIn = (rootAcc, commaStr, keyPrefix, fieldName, fieldType) => {\n  return {\n    ...rootAcc,\n    ...commaStr.split(\",\").reduce(\n      (acc, value, index) => ({\n        ...acc,\n        [`${keyPrefix}${fieldName}${index}`]:\n          fieldType === \"N\" ? parseFloat(value) : value,\n      }),\n      {}\n    ),\n  };\n};\n\nconst genMapFields = (\n  filters = [],\n  keyPrefix = \"#\",\n  keyName = \"field\",\n  keyValueName = \"field\"\n) => {\n  return filters.reduce((acc, item) => {\n    const isValue = keyPrefix === \":\";\n\n    if (isValue && [\"isnotnull\", \"isnull\"].includes(item.operator)) {\n      return { ...acc, [`${keyPrefix}${item[keyName]}`]: \"NULL\" };\n    }\n    if (isValue && [\"between\", \"in\"].includes(item.operator)) {\n      return genMapFieldsIn(acc, item.value, keyPrefix, item.field, item.type);\n    }\n\n    if (isValue && \"A\".includes(item.type)) {\n      let result = { ...acc };\n\n      item.value.forEach((itemValue, idx) => {\n        result[`${keyPrefix}${item[keyName]}${idx}`] = itemValue;\n      });\n\n      return result;\n    }\n\n    return {\n      ...acc,\n      [`${keyPrefix}${item[keyName]}`]: !isValue\n        ? item[keyValueName]\n        : item.type === \"N\"\n        ? parseFloat(item[keyValueName])\n        : item.type === \"B\"\n        ? item[keyValueName] === \"true\"\n        : item[keyValueName],\n    };\n  }, {});\n};\n\nconst parseFilterToExpressions = (filters = []) => {\n  // filters = filters.filter(({ operator, value }) => [\"isnotnull\", \"isnull\"].includes(operator) || !!value );\n\n  const keysFieldsSelected = [];\n\n  const keyConditionExpression = filters.filter(\n    ({ operator, isKey, field }, index) => {\n      if (\n        (isKey || index === 0) &&\n        (!operator ||\n          ![\"startswith\", \"contains\", \"in\", \"neq\"].includes(operator))\n      ) {\n        return keysFieldsSelected.push(field) > 0;\n      }\n      return false;\n    }\n  );\n\n  const filterExpression = filters.filter(\n    ({ field }) => !keysFieldsSelected.includes(field)\n  );\n  const ExpressionAttributeNames = genMapFields(filters, \"#\", \"field\", \"field\");\n\n  const KeyConditionExpression = `${keyConditionExpression\n    .map(parseConditionalExpression)\n    .join(\" and \")}`;\n\n  const FilterExpression = `${filterExpression\n    .map(parseConditionalExpression)\n    .join(\" and \")}`;\n\n  const ExpressionAttributeValues = genMapFields(\n    filters,\n    \":\",\n    \"field\",\n    \"value\"\n  );\n  return {\n    KeyConditionExpression,\n    ExpressionAttributeNames,\n    ExpressionAttributeValues,\n    FilterExpression,\n  };\n};\n","import Dynamo from \"./dynamo\";\n\nexport default { Dynamo };\n","import AbstractRepository from \"./abstract\";\n\nexport default class Repository extends AbstractRepository {\n  constructor(database, tableName) {\n    super(database, tableName);\n  }\n}\n","export default class AbstractRepository {\n  constructor(database, tableName) {\n    Object.assign(this, { database, tableName });\n  }\n\n  async findByKey(id) {\n    return this.database.withTable(this.tableName).findByKey(id);\n  }\n\n  async findAll() {\n    return this.database.withTable(this.tableName).findAll();\n  }\n\n  async filter({\n    indexName,\n    limit,\n    skip,\n    sort,\n    filter,\n    attributesToGetString,\n  }) {\n    return this.database.withTable(this.tableName).filter({\n      indexName,\n      limit,\n      skip,\n      sort,\n      filter,\n      attributesToGetString,\n    });\n  }\n\n  async put(data) {\n    return this.database.withTable(this.tableName).put(data);\n  }\n\n  async delete(key) {\n    return this.database.withTable(this.tableName).delete(key);\n  }\n}\n","import management from \"./management\";\nimport persistence from \"./persistence\";\n\nexport default { management, persistence };\n","import databases from \"./databases\";\nimport UnitOfWork from \"./unity-of-work\";\n\nexport default { databases, UnitOfWork };\n","import Repository from \"./repositories\";\n\nexport default class UnitOfWork {\n  constructor(database, tableName) {\n    Object.assign(this, { database, tableName });\n\n    this.constructor.container = new Map();\n  }\n\n  repository() {\n    const { container } = this.constructor;\n\n    const repository = new Repository(this.database, this.tableName);\n\n    container.set(this.tableName, repository);\n\n    return repository;\n  }\n}\n","import hooks from \"./hooks\";\n\nexport default { hooks };\n","import useUpdate from \"./use-update\";\n\nexport default { useUpdate };\n","// https://stackoverflow.com/a/53180013/8589328\nimport { useRef, useEffect } from 'react';\n\nexport default (fn, inputs) => {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current) fn();\n    else didMountRef.current = true;\n  }, inputs);\n};\n","import math from \"./math\";\nimport string from \"./string\";\nimport func from \"./function\";\nimport network from \"./network\";\n\nexport default { math, string, func, network };\n","export default {\n  // http://www.ietf.org/rfc/rfc4122.txt\n  guid: function guid(length, radix) {\n    var chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\n        \"\"\n      ),\n      uuid = [],\n      i;\n    radix = radix || chars.length;\n\n    if (length) {\n      for (i = 0; i < length; i++) {\n        uuid[i] = chars[0 | (Math.random() * radix)];\n      }\n    } else {\n      var r;\n\n      uuid[8] = uuid[13] = uuid[18] = uuid[23] = \"-\";\n      uuid[14] = \"4\";\n\n      for (i = 0; i < 36; i++) {\n        if (!uuid[i]) {\n          r = 0 | (Math.random() * 16);\n          uuid[i] = chars[i == 19 ? (r & 0x3) | 0x8 : r];\n        }\n      }\n    }\n\n    return uuid.join(\"\").toLowerCase();\n  },\n};\n","export default {\n  // https://stackoverflow.com/questions/36637146/javascript-encode-string-to-hex\n  toHex: function (tmp) {\n    var str = \"\";\n    for (var i = 0; i < tmp.length; i++) {\n      str += tmp[i].charCodeAt(0).toString(16);\n    }\n    return str;\n  },\n  // https://flaviocopes.com/how-to-uppercase-first-letter-javascript/\n  capitalize: function (str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n};\n","export default {\n  // https://davidwalsh.name/javascript-debounce-function\n  debounce: function (func, wait, immediate) {\n    var timeout;\n    return function () {\n      var context = this,\n        args = arguments;\n      var later = function () {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  },\n};\n","export default {\n  // http://ccoenraets.github.io/es6-tutorial-data/promisify/\n  // http://stackoverflow.com/questions/28921127/how-to-wait-for-a-javascript-promise-to-resolve-before-resuming-function\n  // https://developer.mozilla.org/pt-BR/docs/Web/API/XMLHttpRequest\n  request: function (obj) {\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(obj.method || \"GET\", obj.url);\n      if (obj.headers) {\n        Object.keys(obj.headers).forEach(function (key) {\n          xhr.setRequestHeader(key, obj.headers[key]);\n        });\n      }\n      xhr.onload = function () {\n        // console.log(xhr.getAllResponseHeaders());\n\n        // https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n        resolve({\n          code: xhr.status,\n          message: xhr.response || xhr.responseText,\n        });\n\n        // if (xhr.status >= 200 && xhr.status < 300) {\n        //     resolve(xhr.response);\n        // } else {\n        //     reject(xhr.statusText);\n        // }\n      };\n\n      xhr.onerror = function () {\n        reject(xhr.statusText);\n      };\n      xhr.send(obj.body);\n    });\n  },\n  info: {\n    data: null,\n    load: function () {\n      utility.net\n        .request({\n          // url:\n          //   \"http://api.ipstack.com/check?access_key=4e033eb864b6a92fa9027da214a67ccc&format=1\"\n          // url: \"https://freegeoip.net/json/\"\n          url: \"https://ipapi.co/json/\",\n        })\n        .then(function (data) {\n          if (data.code === 200) {\n            utility.net.info.data = JSON.parse(data.message);\n            // console.log(utility.net.info.data)\n          }\n        })\n        .catch(function (error) {\n          utility.net.info.data = {};\n        });\n    },\n  },\n};\n"],"names":["validate","resolver","baseResolver","childResolver","async","parent","args","context","info","_","__","auth","authenticated","message","code","status","error","Error","jwt","require","SECRET","process","env","cucAuthorizationStrategy","data","user","jwtAuthorizationStrategy","token","verify","parts","split","length","type","err","authentication","Authorization","[object Object]","authorizationStrategy","this","authorization","IS_OFFLINE","removeEmptyStringAndNullElements","obj","prop","Object","keys","undefined","parseConditionalExpression","operator","field","value","includes","result","forEach","item","idx","map","index","join","genMapFields","filters","keyPrefix","keyName","keyValueName","reduce","acc","isValue","rootAcc","commaStr","fieldName","fieldType","parseFloat","genMapFieldsIn","itemValue","parseFilterToExpressions","keysFieldsSelected","keyConditionExpression","filter","isKey","push","filterExpression","ExpressionAttributeNames","KeyConditionExpression","FilterExpression","ExpressionAttributeValues","Dynamo","settings","convertEmptyValues","region","endpoint","accessKeyId","secretAccessKey","config","update","dynamo","DynamoDB","client","DocumentClient","assign","console","accum","curr","ComparisonOperator","parseOperator","AttributeValueList","parseValue","tableName","options","params","TableName","KeySchema","AttributeName","KeyType","AttributeDefinitions","AttributeType","ProvisionedThroughput","ReadCapacityUnits","WriteCapacityUnits","indexes","globalIndexes","keyBy","secondaryIndexes","createTable","promise","deleteTable","put","Item","key","updateExpression","expressionAttributeNames","expressionAttributeValues","returnValues","Key","UpdateExpression","ReturnValues","Attributes","condition","ConditionExpression","expression","values","delete","get","scan","Items","indexName","limit","skip","sort","attributesToGetString","lean","IndexName","ProjectionExpression","Count","count","query","Select","ScanIndexForward","dir","Limit","ExclusiveStartKey","response","items","STAGE","log","LastEvaluatedKey","itensToCopy","concat","slice","Repository","database","id","withTable","findByKey","findAll","super","management","persistence","databases","UnitOfWork","constructor","container","Map","repository","set","hooks","useUpdate","fn","inputs","didMountRef","useRef","useEffect","current","math","guid","radix","i","r","chars","uuid","Math","random","toLowerCase","string","toHex","tmp","str","charCodeAt","toString","capitalize","charAt","toUpperCase","func","debounce","wait","immediate","timeout","arguments","later","apply","callNow","clearTimeout","setTimeout","network","request","Promise","resolve","reject","xhr","XMLHttpRequest","open","method","url","headers","setRequestHeader","onload","responseText","onerror","statusText","send","body","load","utility","net","then","JSON","parse","catch"],"mappings":"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"}